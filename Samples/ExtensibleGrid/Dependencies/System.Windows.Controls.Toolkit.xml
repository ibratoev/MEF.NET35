<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Toolkit</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:System.Windows.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:System.Windows.LengthConverter">
            <summary>
            Converts instances of other types to and from instances of a double that
            represent an object measurement such as a height or width.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.LengthConverter.UnitToPixelConversions">
            <summary>
            Conversions from units to pixels.
            </summary>
        </member>
        <member name="M:System.Windows.LengthConverter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.LengthConverter" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether conversion is possible from a specified type to a
            <see cref="T:System.Double" /> that represents an object
            measurement.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="sourceType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert from.
            </param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to values of the
            <see cref="T:System.Double" /> type.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="cultureInfo">
            The <see cref="T:System.Globalization.CultureInfo" /> to use as the
            current culture.
            </param>
            <param name="source">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert a measurement to the
            specified type.
            </summary>
            <param name="typeDescriptorContext">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.
            </param>
            <param name="destinationType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert to.
            </param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified measurement to the specified type.
            </summary>
            <param name="typeDescriptorContext">
            An object that provides a format context.
            </param>
            <param name="cultureInfo">
            The <see cref="T:System.Globalization.CultureInfo" /> to use as the
            current culture.
            </param>
            <param name="value">The value to convert.</param>
            <param name="destinationType">
            A <see cref="T:System.Type" /> that represents the type you want to
            convert to.
            </param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:System.Windows.Controls.NumericExtensions">
            <summary>
            Numeric utility methods used by controls.  These methods are similar in
            scope to the WPF DoubleUtil class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsZero(System.Double)">
            <summary>
            Check if a number is zero.
            </summary>
            <param name="value">The number to check.</param>
            <returns>True if the number is zero, false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsNaN(System.Double)">
            <summary>
            Check if a number isn't really a number.
            </summary>
            <param name="value">The number to check.</param>
            <returns>
            True if the number is not a number, false if it is a number.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsGreaterThan(System.Double,System.Double)">
            <summary>
            Determine if one number is greater than another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is greater than the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.IsLessThanOrClose(System.Double,System.Double)">
            <summary>
            Determine if one number is less than or close to another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is less than or close to the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.NumericExtensions.AreClose(System.Double,System.Double)">
            <summary>
            Determine if two numbers are close in value.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is close in value to the second, false
            otherwise.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.NumericExtensions.NanUnion">
            <summary>
            NanUnion is a C++ style type union used for efficiently converting
            a double into an unsigned long, whose bits can be easily
            manipulated.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericExtensions.NanUnion.FloatingValue">
            <summary>
            Floating point representation of the union.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.NumericExtensions.NanUnion.IntegerValue">
            <summary>
            Integer representation of the union.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TypeConverters">
            <summary>
            Common TypeConverter functionality.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertFrom``1(System.Type)">
            <summary>
            Returns a value indicating whether this converter can convert an
            object of the given type to an instance of the expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="sourceType">
            The type of the source that is being evaluated for conversion.
            </param>
            <returns>
            A value indicating whether the converter can convert the provided
            type.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertFrom``1(System.ComponentModel.TypeConverter,System.Object)">
            <summary>
            Attempts to convert a specified object to an instance of the
            expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <returns>
            The instance of the expected type created from the converted object.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.CanConvertTo``1(System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether conversion is possible.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TypeConverters.ConvertTo(System.ComponentModel.TypeConverter,System.Object,System.Type)">
            <summary>
            Attempts to convert a specified object to an instance of the
            desired type.
            </summary>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:System.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:System.Windows.Controls.Primitives.VisualTreeExtensions">
            <summary>
            Provides useful extensions for working with the visual tree.
            </summary>
            <remarks>
            Since many of these extension methods are declared on types like
            DependencyObject high up in the class hierarchy, we've placed them in
            the Primitives namespace which is less likely to be imported for normal
            scenarios.
            </remarks>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree ancestors of the element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree ancestors of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree ancestors of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree children of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree descendants of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element and the element
            itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree descendants of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree descendants of an element and the element
            itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree descendants of an element and the element itself.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree siblings of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree siblings of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree siblings of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree siblings of an element and the element itself.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Get the bounds of an element relative to another element.
            </summary>
            <param name="element">The element.</param>
            <param name="otherElement">
            The element relative to the other element.
            </param>
            <returns>
            The bounds of the element relative to another element, or null if
            the elements are not related.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="otherElement"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated(System.Windows.FrameworkElement,System.Action)">
            <summary>
            Perform an action when the element's LayoutUpdated event fires.
            </summary>
            <param name="element">The element.</param>
            <param name="action">The action to perform.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="action"/> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.DockPanel">
            <summary>
            Arranges child elements around the edges of the panel.  Optionally, 
            last added child element can occupy the remaining space.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DockPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DockPanel.LastChildFillProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" />
            dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.OnLastChildFillPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LastChildFillProperty property changed handler.
            </summary>
            <param name="d">DockPanel that changed its LastChildFill.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets the value of the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached
            property for the specified element.
            </summary>
            <param name="element">
            The element from which the property value is read.
            </param>
            <returns>
            The <see cref="P:System.Windows.Controls.DockPanel.Dock" /> property
            value for the element.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
            <summary>
            Sets the value of the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" /> attached
            property for the specified element to the specified dock value.
            </summary>
            <param name="element">
            The element to which the attached property is assigned.
            </param>
            <param name="dock">
            The dock value to assign to the specified element.
            </param>
        </member>
        <member name="F:System.Windows.Controls.DockPanel.DockProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.DockPanel.Dock" />
            attached property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.OnDockPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DockProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its Dock.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.DockPanel" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:System.Windows.Controls.DockPanel" /> in preparation
            for arranging them during the
            <see cref="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)" />
            pass.
            </summary>
            <param name="constraint">
            The area available to the
            <see cref="T:System.Windows.Controls.DockPanel" />.
            </param>
            <returns>
            The desired size of the
            <see cref="T:System.Windows.Controls.DockPanel" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the child elements of the
            <see cref="T:System.Windows.Controls.DockPanel" /> control.
            </summary>
            <param name="arrangeSize">
            The area in the parent element that the
            <see cref="T:System.Windows.Controls.DockPanel" /> should use to
            arrange its child elements.
            </param>
            <returns>
            The actual size of the
            <see cref="T:System.Windows.Controls.DockPanel" /> after the child
            elements are arranged. The actual size should always equal
            <paramref name="arrangesize" />.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.DockPanel.LastChildFill">
            <summary>
            Gets or sets a value indicating whether the last child element
            added to a <see cref="T:System.Windows.Controls.DockPanel" />
            resizes to fill the remaining space.
            </summary>
            <value>
            True if the last element added resizes to fill the remaining space,
            false to indicate the last element does not resize. The default is
            true.
            </value>
        </member>
        <member name="T:System.Windows.Controls.ExpandDirection">
            <summary>
            Specifies the direction in which an
            <see cref="T:System.Windows.Controls.Expander" /> control opens.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Down">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the down direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Up">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the up direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Left">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the left direction.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ExpandDirection.Right">
            <summary>
            Specifies that the <see cref="T:System.Windows.Controls.Expander" />
            control opens in the right direction.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Expander">
            <summary>
            Represents a control that displays a header and has a collapsible
            content window.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.HeaderedContentControl">
            <summary>
            Provides the base implementation for controls that contain a single
            content element and a header.
            </summary>
            <remarks>
            HeaderedContentControl adds Header and HeaderTemplatefeatures to a
            ContentControl. HasHeader and HeaderTemplateSelector are removed for
            lack of support and consistency with other Silverlight controls.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose Header property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplateProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose HeaderTemplate property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.HeaderedContentControl" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property changes.
            </summary>
            <param name="oldHeader">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property.
            </param>
            <param name="newHeader">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property.
            </param>
        </member>
        <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property.
            </param>
        </member>
        <member name="P:System.Windows.Controls.HeaderedContentControl.Header">
            <summary>
            Gets or sets the content for the header of the control.
            </summary>
            <value>
            The content for the header of the control. The default value is
            null.
            </value>
        </member>
        <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the
            control's header.
            </summary>
            <value>
            The template that is used to display the content of the control's
            header. The default is null.
            </value>
        </member>
        <member name="F:System.Windows.Controls.Expander.ElementExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Expander._expanderButton">
            <summary>
            The ExpanderButton template part is a templated ToggleButton that's used 
            to expand and collapse the ExpandSite, which hosts the content.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Expander.ExpandDirectionProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Expander.ExpandDirection" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Expander.ExpandDirection" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpandDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandDirectionProperty PropertyChangedCallback call back static function.
            This function validates the new value before calling virtual function OnExpandDirectionChanged.
            </summary>
            <param name="d">Expander object whose ExpandDirection property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.IsValidExpandDirection(System.Object)">
            <summary>
            Check whether the passed in value o is a valid ExpandDirection enum value.
            </summary>
            <param name="o">The value to be checked.</param>
            <returns>True if o is a valid ExpandDirection enum value, false o/w.</returns>
        </member>
        <member name="F:System.Windows.Controls.Expander.IsExpandedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnIsExpandedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandedProperty PropertyChangedCallback static function.
            </summary>
            <param name="d">Expander object whose Expanded property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Expander" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Expander" /> control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            object for the <see cref="T:System.Windows.Controls.Expander" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.
            </summary>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpanded">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.Expander.Expanded" /> event
            when the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            property changes from false to true.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnCollapsed">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.Expander.Collapsed" /> event
            when the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            property changes from true to false.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Expander.ToggleExpanded(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Handle changes to the IsExpanded property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.RaiseEvent(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.OnExpanderButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle ExpanderButton's click event.
            </summary>
            <param name="sender">The ExpanderButton in template.</param>
            <param name="e">Routed event arg.</param>
        </member>
        <member name="M:System.Windows.Controls.Expander.System#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Expander.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Expander.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Expander.ExpandDirection">
            <summary>
            Gets or sets the direction in which the
            <see cref="T:System.Windows.Controls.Expander" /> content window
            opens.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Controls.ExpandDirection" />
            values that define which direction the content window opens.  The
            default is
            <see cref="F:System.Windows.Controls.ExpandDirection.Down" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Expander.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.Expander" /> content window is
            visible.
            </summary>
            <value>
            True if the content window is expanded; otherwise, false. The
            default is false.
            </value>
        </member>
        <member name="E:System.Windows.Controls.Expander.Expanded">
            <summary>
            Occurs when the content window of an
            <see cref="T:System.Windows.Controls.Expander" /> control opens to
            display both its header and content.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Expander.Collapsed">
            <summary>
            Occurs when the content window of an
            <see cref="T:System.Windows.Controls.Expander" /> control closes and
            only the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            is visible.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Expander.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.ExpanderAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.Expander" /> types to UI
            automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.#ctor(System.Windows.Controls.Expander)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The element associated with this automation peer.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>
            The
            <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" />
            enumeration value.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>A string that contains Expander.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:System.Windows.Controls.Expander" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />.
            </summary>
            <param name="pattern">One of the enumeration values.</param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Displays all child nodes, controls, or content of the control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Hides all nodes, controls, or content that are descendants of the
            control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise an automation event when a Expander is expanded or collapsed.
            </summary>
            <param name="oldValue">
            A value indicating whether the Expander was expanded.
            </param>
            <param name="newValue">
            A value indicating whether the Expander is expanded.
            </param>
        </member>
        <member name="P:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the control.
            </summary>
            <value>
            The state (expanded or collapsed) of the control.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:System.Windows.Controls.BindingSourceEvaluator`1">
            <summary>
            A framework element that permits a binding to be evaluated in a new data
            context leaf node. Uses the BindingSource to do the evaluation.
            </summary>
            <typeparam name="T">The type of dynamic binding to return.</typeparam>
            <remarks>Mimicks the class BindingEvaluator that uses DataContext
            to do evaluation.</remarks>
        </member>
        <member name="F:System.Windows.Controls.BindingSourceEvaluator`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.BindingSourceEvaluator`1.#ctor(System.Windows.Data.Binding)">
            <summary>
            Initializes a new instance of the BindingSourceEvaluator class.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:System.Windows.Controls.BindingSourceEvaluator`1.GetDynamicValue(System.Object)">
            <summary>
            Evaluates the specified source.
            </summary>
            <param name="source">The object used as a source for the
            evaluation.</param>
            <returns>The evaluated binding.</returns>
            <remarks>Only uses Path, Converter, ConverterCulture and
            ConverterParameter.</remarks>
        </member>
        <member name="P:System.Windows.Controls.BindingSourceEvaluator`1.Value">
            <summary>
            Gets the data item string value.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.BindingSourceEvaluator`1.ValueBinding">
            <summary>
            Gets the value binding that is used as a template
            for the actual evaluation.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DesignerProperties">
            <summary>
            Provides a custom implementation of DesignerProperties.GetIsInDesignMode
            to work around an issue.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <param name="element">The element from which the property value is
            read.</param>
            <returns>True if in design mode.</returns>
        </member>
        <member name="F:System.Windows.Controls.DesignerProperties._isInDesignMode">
            <summary>
            Stores the computed InDesignMode value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:System.Windows.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ItemsControlExtensions">
            <summary>
            Provides useful extensions to ItemsControl instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the Panel that contains the containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The Panel that contains the containers of an ItemsControl, or null
            if the Panel could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetScrollHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the ScrollViewer that contains the containers of an
            ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The ScrollViewer that contains the containers of an ItemsControl, or
            null if a ScrollViewer could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetContainersIterator``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The item containers of an ItemsControl.</returns>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainersIterator``1(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and item containers of an ItemsControl.
            </summary>
            <typeparam name="TContainer">
            The type of the item containers.
            </typeparam>
            <param name="control">The ItemsControl.</param>
            <returns>The items and item containers of an ItemsControl.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.ScrollViewerExtensions">
            <summary>
            Provides useful extensions to ScrollViewer instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ScrollViewerExtensions.LineChange">
            <summary>
            The amount to scroll a ScrollViewer for a line change.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.GetIsMouseWheelScrollingEnabled(System.Windows.Controls.ScrollViewer)">
            <summary>
            Gets a value indicating whether the ScrollViewer has enabled
            scrolling via the mouse wheel.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <returns>
            A value indicating whether the ScrollViewer has enabled scrolling
            via the mouse wheel.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.SetIsMouseWheelScrollingEnabled(System.Windows.Controls.ScrollViewer,System.Boolean)">
            <summary>
            Sets a value indicating whether the ScrollViewer will enable
            scrolling via the mouse wheel.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="value">
            A value indicating whether the ScrollViewer will enable scrolling
            via the mouse wheel.
            </param>
        </member>
        <member name="F:System.Windows.Controls.ScrollViewerExtensions.IsMouseWheelScrollingEnabledProperty">
            <summary>
            Identifies the IsMouseWheelScrollingEnabled dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.OnIsMouseWheelScrollingEnabledPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsMouseWheelScrollingEnabledProperty property changed handler.
            </summary>
            <param name="d">ScrollViewerExtensions that changed its IsMouseWheelScrollingEnabled.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.OnMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the mouse wheel event.
            </summary>
            <param name="sender">The ScrollViewer.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.CoerceVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Coerce a vertical offset to fall within the vertical bounds of a
            ScrollViewer.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to coerce.</param>
            <returns>
            The coerced vertical offset that falls within the ScrollViewer's
            vertical bounds.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.CoerceHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Coerce a horizontal offset to fall within the horizontal bounds of a
            ScrollViewer.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to coerce.</param>
            <returns>
            The coerced horizontal offset that falls within the ScrollViewer's
            horizontal bounds.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollByVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer vertically by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollByHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer horizontally by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to scroll.</param>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.LineRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.PageRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToTop(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the top.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToBottom(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the bottom.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the left.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollToRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the right.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.ScrollViewerExtensions.ScrollIntoView(System.Windows.Controls.ScrollViewer,System.Windows.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollViewer's viewport.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="element">The element to scroll into view.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.
            </exception>
        </member>
        <member name="T:System.Windows.Controls.CalendarExtensions">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.CalendarExtensions._suspendedHandlers">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.IsHandlerSuspended(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="dependencyProperty">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SetValueNoCallback(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="property">Inherited code: Requires comment 2.</param>
            <param name="value">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SuspendHandler(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="obj">Inherited code: Requires comment 1.</param>
            <param name="dependencyProperty">Inherited code: Requires comment 2.</param>
            <param name="suspend">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetMetaKeyState(System.Boolean@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetMetaKeyState(System.Boolean@,System.Boolean@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 2.</param>
            <param name="shift">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.ContainsAny(System.Windows.Controls.CalendarDateRange,System.Windows.Controls.CalendarDateRange,System.Windows.Controls.CalendarInfo)">
            <summary>
            Returns true if any day in the given DateTime range is contained in
            the current CalendarDateRange.
            </summary>
            <param name="value">The current range.</param>
            <param name="range">The range to compare.</param>
            <param name="info">The CalendarInfo.</param>
            <returns>
            A value indicating whether any day in the given DateTime range is\
            contained in the current CalendarDateRange.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetDate(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Get the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <returns>The date of the button.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.GetDateNullable(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Get the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <returns>The date of the button.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarExtensions.SetDate(System.Windows.Controls.Primitives.GlobalCalendarDayButton,System.DateTime)">
            <summary>
            Set the date of a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
            <param name="date">The date of the button.</param>
        </member>
        <member name="T:System.Windows.Controls.CalendarInfo">
            <summary>
            Provides globalized calendar operations.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the CalendarInfo class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.EnsureDateFormatInfo">
            <summary>
            Get the DateFormatInfo and ensure it's not null.
            </summary>
            <returns>The DateFormatInfo.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.Compare(System.DateTime,System.DateTime)">
            <summary>
            Compares two instances of DateTime and returns an integer that
            indicates whether the first instance is earlier than, the same as,
            or later than the second instance.
            </summary>
            <param name="first">The first DateTime.</param>
            <param name="second">The second DateTime.</param>
            <returns>
            Less than zero indicates that first is less than second, zero
            indicates that first equals second, and greater than zero indicated
            that second is greater than first.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.CompareDays(System.DateTime,System.DateTime)">
            <summary>
            Compares the days of two instances of DateTime and returns an
            integer that indicates whether the first instance is earlier than,
            the same as, or later than the second instance.
            </summary>
            <param name="first">The first DateTime.</param>
            <param name="second">The second DateTime.</param>
            <returns>
            Less than zero indicates that first is less than second, zero
            indicates that first equals second, and greater than zero indicated
            that second is greater than first.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetMonthDifference(System.DateTime,System.DateTime)">
            <summary>
            Get the number of months between two dates.
            </summary>
            <param name="first">The first date.</param>
            <param name="second">The second date.</param>
            <returns>The number of months between the two dates.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDecadeStart(System.DateTime)">
            <summary>
            Get the start of the DateTime's decade.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The start of the DateTime's decade.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDecadeEnd(System.DateTime)">
            <summary>
            Get the end of the DateTime's decade.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The end of the DateTime's decade.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetDayOfWeek(System.DateTime)">
            <summary>
            Get the day of the week of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The day of the week of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetFirstDayInYear(System.DateTime)">
            <summary>
            Get the first day in the year of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The first day in the year of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetFirstDayInMonth(System.DateTime)">
            <summary>
            Get the first day in the month of a DateTime.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>The first day in the month of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetShortestDayName(System.Int32)">
            <summary>
            Get the shortest day name for a given day of week.
            </summary>
            <param name="dayOfWeekIndex">Index of the day of week.</param>
            <returns>The shortest day name for a given day of week.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.GetAbbreviatedMonthName(System.Int32)">
            <summary>
            Get the abbreviated month name for a given month.
            </summary>
            <param name="monthIndex">Index of the month.</param>
            <returns>The abbreviated month name for a given month.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DayToString(System.DateTime)">
            <summary>
            Convert the day of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the day of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.MonthAndYearToString(System.DateTime)">
            <summary>
            Convert the year and month of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>
            String representation of the year and month of a DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.YearToString(System.DateTime)">
            <summary>
            Convert the year of a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the year of a DateTime.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DecadeToString(System.Int32,System.Int32)">
            <summary>
            Convert a decade range to a string.
            </summary>
            <param name="decadeStart">The start of the decade.</param>
            <param name="decadeEnd">The end of the decade.</param>
            <returns>String representation of the decade range.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DateToString(System.DateTime)">
            <summary>
            Convert a DateTime to a string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>String representation of the date.</returns>
        </member>
        <member name="M:System.Windows.Controls.CalendarInfo.DateToLongString(System.DateTime)">
            <summary>
            Convert a DateTime to a long format string.
            </summary>
            <param name="day">The DateTime.</param>
            <returns>Long format string representation of the date.</returns>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.DaysInWeek">
            <summary>
            Gets the number of days in a week.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CalendarInfo.FirstDayOfWeek">
            <summary>
            Gets the first day of the week.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CultureCalendarInfo">
            <summary>
            Provides globalized calendar operations based on a specific culture.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the CultureCalendarInfo class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the CultureCalendarInfo class.
            </summary>
            <param name="culture">
            The culture used to provide the calendar operations.
            </param>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.CultureCalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.CultureCalendarInfo.Culture">
            <summary>
            Gets the culture used to provide the calendar operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.CultureCalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GregorianCalendarInfo">
            <summary>
            Provides globalized calendar operations based on the GregorianCalendar.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GregorianCalendarInfo._calendar">
            <summary>
            The Calendar that provides our date operations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GregorianCalendarInfo._formatInfo">
            <summary>
            The DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the GregorianCalendarInfo class.
            </summary>
            <remarks>
            Uses the most appropriate GregorianCalendar for
            CultureInfo.CurrentCulture.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the GregorianCalendarInfo class.
            </summary>
            <param name="culture">
            The culture used to provide the GregorianCalendar and date
            formatting information.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddDays(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of days away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add days.</param>
            <param name="days">The number of days to add.</param>
            <returns>
            The DateTime that results from adding the specified number of days
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of months away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add months.</param>
            <param name="months">The number of months to add.</param>
            <returns>
            The DateTime that results from adding the specified number of months
            to the specified DateTime.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GregorianCalendarInfo.AddYears(System.DateTime,System.Int32)">
            <summary>
            Returns a DateTime that is the specified number of years away from
            the specified DateTime.
            </summary>
            <param name="day">The DateTime to which to add years.</param>
            <param name="years">The number of years to add.</param>
            <returns>
            The DateTime that results from adding the specified number of years
            to the specified DateTime.
            </returns>
        </member>
        <member name="P:System.Windows.Controls.GregorianCalendarInfo.DateFormatInfo">
            <summary>
            Gets the DateTimeFormatInfo to use for formatting.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.CalendarDayButtonStyleSelector">
            <summary>
            Provides a way to apply GlobalCalendarDayButton Styles based on custom
            logic. 
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.CalendarDayButtonStyleSelector.#ctor">
            <summary>
            Initializes a new instance of the CalendarDayButtonStyleSelector
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.CalendarDayButtonStyleSelector.SelectStyle(System.DateTime,System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            When overridden in a derived class, returns a
            GlobalCalendarDayButton Style based on custom logic.
            </summary>
            <param name="day">The day to select a Style for.</param>
            <param name="container">The GlobalCalendarDayButton.</param>
            <returns>A Style for the GlobalCalendarDayButton.</returns>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendar">
            <summary>
            Represents a control that enables a user to select a date by using a
            visual calendar display.
            </summary>
            <remarks>
            <para>
            A GlobalCalendar control can be used on its own, or as a drop-down part of a
            DatePicker control. For more information, see DatePicker.  A GlobalCalendar
            displays either the days of a month, the months of a year, or the years
            of a decade, depending on the value of the DisplayMode property.  When
            displaying the days of a month, the user can select a date, a range of
            dates, or multiple ranges of dates.  The kinds of selections that are
            allowed are controlled by the SelectionMode property.
            </para>
            <para>
            The range of dates displayed is governed by the DisplayDateStart and
            DisplayDateEnd properties.  If DisplayMode is Year or Decade, only
            months or years that contain displayable dates will be displayed.
            Setting the displayable range to a range that does not include the
            current DisplayDate will throw an ArgumentOutOfRangeException.
            </para>
            <para>
            The BlackoutDates property can be used to specify dates that cannot be
            selected. These dates will be displayed as dimmed and disabled.
            </para>
            <para>
            By default, Today is highlighted.  This can be disabled by setting
            IsTodayHighlighted to false.
            </para>
            <para>
            The GlobalCalendar control provides basic navigation using either the mouse or
            keyboard. The following table summarizes keyboard navigation.
            
                Key Combination     DisplayMode     Action
                ARROW               Any             Change focused date, unselect
                                                    all selected dates, and select
                                                    new focused date.
                                                    
                SHIFT+ARROW         Any             If SelectionMode is not set to
                                                    SingleDate or None begin
                                                    selecting a range of dates.
                                                    
                CTRL+UP ARROW       Any             Switch to the next larger
                                                    DisplayMode.  If DisplayMode is
                                                    already Decade, no action.
                                                    
                CTRL+DOWN ARROW     Any             Switch to the next smaller
                                                    DisplayMode.  If DisplayMode is
                                                    already Month, no action.
                                                    
                SPACEBAR            Month           Select focused date.
                
                SPACEBAR            Year or Decade  Switch DisplayMode to the Month
                                                    or Year represented by focused
                                                    item.
                                                    
                CTRL+HOME           Any             Switch DisplayMode to Month,
                                                    show today's date, and try to
                                                    select the date if allowed.
            </para>
            <para>
            XAML Usage for Classes Derived from GlobalCalendar
            If you define a class that derives from GlobalCalendar, the class can be used
            as an object element in XAML, and all of the inherited properties and
            events that show a XAML usage in the reference for the GlobalCalendar members
            can have the same XAML usage for the derived class. However, the object
            element itself must have a different prefix mapping than the controls:
            mapping shown in the usages, because the derived class comes from an
            assembly and namespace that you create and define.  You must define your
            own prefix mapping to an XML namespace to use the class as an object
            element in XAML.
            </para>
            </remarks>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.RowsPerMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ColumnsPerMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.RowsPerYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ColumnsPerYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ElementRoot">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.ElementMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DefaultCalendarInfo">
            <summary>
            The default CalendarInfo used to provide globalized date operations.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarInfoProperty">
            <summary>
            Identifies the CalendarInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarInfoPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CalendarInfoProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its CalendarInfo.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarButtonStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarButtonStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.EnsureCalendarButtonStyle(System.Windows.Controls.Primitives.GlobalCalendarButton,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="calendarButton">Inherited code: Requires comment 1.</param>
            <param name="calendarButtonStyle">Inherited code: Requires comment 2.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle" />
            dependency property.
            </summary>
            <remarks>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle" />
            dependency property.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleSelectorProperty">
            <summary>
            Identifies the CalendarDayButtonStyleSelector dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarDayButtonStyleOrSelectorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ApplyDayButtonStyle(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Apply a Style to a GlobalCalendarDayButton.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.CalendarItemStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCalendarItemStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.EnsureMonthStyle(System.Windows.Controls.Primitives.GlobalCalendarItem,System.Windows.Style)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="month">Inherited code: Requires comment 1 .</param>
            <param name="monthStyle">Inherited code: Requires comment 2 .</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.IsTodayHighlightedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnIsTodayHighlightedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTodayHighlightedProperty property changed handler.
            </summary>
            <param name="d">
            GlobalCalendar that changed its IsTodayHighlighted.
            </param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayModeProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayModeProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayMode.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidDisplayMode(System.Windows.Controls.CalendarMode)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="mode">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="args">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.FirstDayOfWeekProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnFirstDayOfWeekChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FirstDayOfWeekProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its FirstDayOfWeek.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidFirstDayOfWeek(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.SelectionModeProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectionModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="d">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidSelectionMode(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="value">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.SelectedDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its SelectedDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedDatesCollectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._selectedMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._selectedYear">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDate(System.Windows.Controls.GlobalCalendarDateChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateStartProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateStartChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateStartProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDateStart.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SelectedDateMin(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar.DisplayDateEndProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDisplayDateEndChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateEndProperty property changed handler.
            </summary>
            <param name="d">GlobalCalendar that changed its DisplayDateEnd.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SelectedDateMax(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendar._isShiftPressed">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ResetStates">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ToString">
            <summary>
            Provides a text representation of the selected date.
            </summary>
            <returns>
            A text representation of the selected date, or an empty string if
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDate" /> is
            null.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            for the <see cref="T:System.Windows.Controls.GlobalCalendar" /> object.
            </returns>
            <remarks>
            <para>
            This method creates a new GlobalCalendarAutomationPeer instance if one has
            not been created for the control instance; otherwise, it returns the
            GlobalCalendarAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
             Called when the IsEnabled property changes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.FindDayButtonFromDay(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="day">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.UpdateMonths">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedMonthChanged(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="selectedMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnSelectedYearChanged(System.Nullable{System.DateTime})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="selectedYear">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidDateSelection(System.Windows.Controls.GlobalCalendar,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <param name="value">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.IsValidKeyboardSelection(System.Windows.Controls.GlobalCalendar,System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="cal">Inherited code: Requires comment 1.</param>
            <param name="value">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.AddSelection">
            <summary>
            This method adds the days that were selected by Keyboard to the
            SelectedDays Collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessSelection(System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
            <param name="lastSelectedDate">Inherited code: Requires comment 2.</param>
            <param name="index">Inherited code: Requires comment 3.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.HighlightDays">
            <summary>
            This method highlights the days in MultiSelection mode without
            adding them to the SelectedDates collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.UnHighlightDays">
            <summary>
            This method un-highlights the days that were hovered over but not
            added to the SelectedDates collection or un-highlighted the
            previously selected days in SingleRange Mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.SortHoverIndexes(System.Int32@,System.Int32@)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="startIndex">Inherited code: Requires comment 1.</param>
            <param name="endIndex">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnHeaderClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnNextClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnPreviousClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDayClick(System.DateTime)">
            <summary>
            If the day is a trailing day, Update the DisplayDate.
            </summary>
            <param name="selectedDate">Inherited code: Requires comment.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnMonthClick">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.OnDayButtonMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessCalendarKey(System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="e">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessUpKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
            <param name="shift">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessDownKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">Inherited code: Requires comment 1.</param>
            <param name="shift">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessLeftKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessRightKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessEnterKey">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessHomeKey(System.Boolean,System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="ctrl">
            A value indicating whether the Control key is pressed.
            </param>
            <param name="shift">
            A value indicating whether the Shift key is pressed.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessEndKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessPageDownKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessPageUpKey(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="shift">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_KeyUp(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.ProcessShiftKeyUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendar.Calendar_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment1 .</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.Root">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarInfo">
            <summary>
            Gets or sets the CalendarInfo that provides globalized date
            operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.Info">
            <summary>
            Gets the CalendarInfo that provides globalized date operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.MonthControl">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FocusButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FocusCalendarButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarButtonStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarDayButtonStyleSelector">
            <summary>
            Gets or sets a CalendarDayButtonStyleSelector that enables an application writer
            to provide custom style-selection logic for the day buttons.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.CalendarItemStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> associated
            with the control's internal
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            object.
            </summary>
            <value>
            The current style of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            object.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.IsTodayHighlighted">
            <summary>
            Gets or sets a value indicating whether the current date is
            highlighted.
            </summary>
            <value>
            True if the current date is highlighted; otherwise, false. The
            default is true.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayMode">
            <summary>
            Gets or sets a value indicating whether the calendar is displayed in
            months, years, or decades.
            </summary>
            <value>
            A value indicating what length of time the
            <see cref="T:System.Windows.Controls.GlobalCalendar" /> should display.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets the day that is considered the beginning of the week.
            </summary>
            <value>
            A <see cref="T:System.DayOfWeek" /> representing the beginning of
            the week. The default is <see cref="F:System.DayOfWeek.Sunday" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.FirstDay">
            <summary>
            Gets the day that is considered the beginning of the week.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectionMode">
            <summary>
            Gets or sets a value that indicates what kind of selections are
            allowed.
            </summary>
            <value>
            A value that indicates the current selection mode. The default is
            <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />.
            </value>
            <remarks>
            <para>
            This property determines whether the GlobalCalendar allows no selection,
            selection of a single date, or selection of multiple dates.  The
            selection mode is specified with the CalendarSelectionMode
            enumeration.
            </para>
            <para>
            When this property is changed, all selected dates will be cleared.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedDate">
            <summary>
            Gets or sets the currently selected date.
            </summary>
            <value>The date currently selected. The default is null.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The given date is outside the range specified by
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            and <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />
            -or-
            The given date is in the
            <see cref="P:System.Windows.Controls.GlobalCalendar.BlackoutDates" />
            collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If set to anything other than null when
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectionMode" /> is
            set to
            <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />.
            </exception>
            <remarks>
            Use this property when SelectionMode is set to SingleDate.  In other
            modes, this property will always be the first date in SelectedDates.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedDates">
            <summary>
            Gets a collection of selected dates.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.GlobalSelectedDatesCollection" />
            object that contains the currently selected dates. The default is an
            empty collection.
            </value>
            <remarks>
            Dates can be added to the collection either individually or in a
            range using the AddRange method.  Depending on the value of the
            SelectionMode property, adding a date or range to the collection may
            cause it to be cleared.  The following table lists how
            CalendarSelectionMode affects the SelectedDates property.
            
                CalendarSelectionMode   Description
                None                    No selections are allowed.  SelectedDate
                                        cannot be set and no values can be added
                                        to SelectedDates.
                                        
                SingleDate              Only a single date can be selected,
                                        either by setting SelectedDate or the
                                        first value in SelectedDates.  AddRange
                                        cannot be used.
                                        
                SingleRange             A single range of dates can be selected.
                                        Setting SelectedDate, adding a date
                                        individually to SelectedDates, or using
                                        AddRange will clear all previous values
                                        from SelectedDates.
                MultipleRange           Multiple non-contiguous ranges of dates
                                        can be selected. Adding a date
                                        individually to SelectedDates or using
                                        AddRange will not clear SelectedDates.
                                        Setting SelectedDate will still clear
                                        SelectedDates, but additional dates or
                                        range can then be added.  Adding a range
                                        that includes some dates that are
                                        already selected or overlaps with
                                        another range results in the union of
                                        the ranges and does not cause an
                                        exception.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.RemovedItems">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.LastSelectedDateInternal">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.LastSelectedDate">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedMonth">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.SelectedYear">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.BlackoutDates">
            <summary>
            Gets a collection of dates that are marked as not selectable.
            </summary>
            <value>
            A collection of dates that cannot be selected. The default value is
            an empty collection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Adding a date to this collection when it is already selected or
            adding a date outside the range specified by DisplayDateStart and
            DisplayDateEnd.
            </exception>
            <remarks>
            <para>
            Dates in this collection will appear as disabled on the calendar.
            </para>
            <para>
            To make all past dates not selectable, you can use the
            AddDatesInPast method provided by the collection returned by this
            property.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDate">
            <summary>
            Gets or sets the date to display.
            </summary>
            <value>The date to display.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The given date is not in the range specified by
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart" />
            and
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd" />.
            </exception>
            <remarks>
            <para>
            This property allows the developer to specify a date to display.  If
            this property is a null reference (Nothing in Visual Basic),
            SelectedDate is displayed.  If SelectedDate is also a null reference
            (Nothing in Visual Basic), Today is displayed.  The default is
            Today.
            </para>
            <para>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </para>
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateInternal">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateStart">
            <summary>
            Gets or sets the first date to be displayed.
            </summary>
            <value>The first date to display.</value>
            <remarks>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateRangeStart">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateEnd">
            <summary>
            Gets or sets the last date to be displayed.
            </summary>
            <value>The last date to display.</value>
            <remarks>
            To set this property in XAML, use a date specified in the format
            yyyy/mm/dd.  The mm and dd components must always consist of two
            characters, with a leading zero if necessary.  For instance, the
            month of May should be specified as 05.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DisplayDateRangeEnd">
            <summary>
            Gets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverStart">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverStartIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEndInternal">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEnd">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HoverEndIndex">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.HasFocusInternal">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.IsMouseSelection">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendar.DatePickerDisplayDateFlag">
            <summary>
            Gets or sets a value indicating whether DatePicker should change its 
            DisplayDate because of a SelectedDate change on its GlobalCalendar.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.SelectedDatesChanged">
            <summary>
            Occurs when the collection returned by the
            <see cref="P:System.Windows.Controls.GlobalCalendar.SelectedDates" />
            property is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DisplayDateChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayDate" />
            property is changed.
            </summary>
            <remarks>
            This event occurs after DisplayDate is assigned its new value.
            </remarks>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DisplayModeChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.GlobalCalendar.DisplayMode" />
            property is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.GlobalCalendar.DayButtonMouseUp">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer">
            <summary>
            Exposes <see cref="T:System.Windows.Controls.GlobalCalendar" /> types to UI automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" /> instance to
            associate with the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendar that is associated with
            this GlobalCalendarAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the UIElement that is associated with this
            FrameworkElementAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarAutomationPeer. 
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendar that is associated with this
            GlobalCalendarAutomationPeer.  This method is called by GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
            <summary>
            Retrieves the UI automation provider for the specified cell.
            </summary>
            <param name="row">
            The ordinal number of the row.
            </param>
            <param name="column">
            The ordinal number of the column.
            </param>
            <returns>
            The UI automation provider for the specified cell.
            </returns>
            <remarks>
            <para>
            Grid coordinates are zero-based. The upper-left cell (or upper-right
            cell, depending on locale) has coordinates (0,0).
            </para>
            <para>
            If a cell is empty, a UI Automation provider must still be returned
            in order to support the ContainingGrid property for that cell.  This
            is possible when the layout of child elements in the grid is similar
            to a ragged array.
            </para>
            <para>
            Hidden rows and columns can be loaded in the tree, depending on the
            provider implementation.  Therefore, they will be reflected in the
            RowCount and ColumnCount properties.  If the hidden rows and columns
            have not yet been loaded, they should not be counted.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
            <summary>
            Retrieves a collection of control-specific view identifiers.
            </summary>
            <returns>
            A collection of values that identifies the views that are available
            for a UI automation element.
            </returns>
            <remarks>
            The collection of view identifiers must be identical across
            instances.  View identifier values can be passed to GetViewName.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
            <summary>
            Retrieves the name of a control-specific view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <returns>A localized name for the view.</returns>
            <remarks>
            View identifiers can be retrieved by using GetSupportedViews.  The
            collection of view identifiers must be identical across instances.
            View names must be suitable for use in text-to-speech, Braille, and
            other accessible applications.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
            <summary>
            Sets the current control-specific view.
            </summary>
            <param name="viewId">A view identifier.</param>
            <remarks>
            View identifiers can be retrieved by using GetSupportedViews.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is
            selected.
            </summary>
            <returns>
            A collection of UI automation providers.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.RaiseSelectionEvents(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raise selection AutomationEvents when the GlobalCalendar's SelectedDates
            collection changes.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.RaiseDayButtonSelectionEvent(System.Windows.Controls.GlobalCalendar,System.DateTime,System.Windows.Automation.Peers.AutomationEvents)">
            <summary>
            Raise an automation peer event for the selection of a day button.
            </summary>
            <param name="calendar">
            The GlobalCalendar associated with this automation peer.
            </param>
            <param name="date">The selected date.</param>
            <param name="eventToRaise">The selection event to raise.</param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
            <summary>
            Gets a collection of UI automation providers that represents all the
            column headers in a table.
            </summary>
            <returns>A collection of UI automation providers.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
            <summary>
            Retrieves a collection of UI automation providers that represents
            all row headers in the table.
            </summary>
            <returns>A collection of UI automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the GlobalCalendarAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.OwningGrid">
            <summary>
            Gets the current top-level Grid of with the GlobalCalendar.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
            <summary>
            Gets the total number of columns in a grid.
            </summary>
            <value>
            The total number of columns in a grid.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
            <summary>
            Gets the total number of rows in a grid.
            </summary>
            <value>
            The total number of rows in a grid.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
            <summary>
            Gets the current control-specific view.
            </summary>
            <value>
            The value for the current view of the UI automation element.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider allows
            more than one child element to be selected at the same time.
            </summary>
            <value>
            True if multiple selection is allowed; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider
            requires at least one child element to be selected.
            </summary>
            <value>
            True if selection is required; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
            <summary>
            Gets the primary direction of traversal for the table.
            </summary>
            <value>
            The primary direction of traversal.
            </value>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection">
            <summary>
            Represents a collection of non-selectable dates in a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection._owner">
            <summary>
            The GlobalCalendar whose dates this object represents.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection._dispatcherThread">
            <summary>
            The dispatcher thread.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" /> whose dates
            this object represents.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.AddDatesInPast">
            <summary>
            Adds all dates before <see cref="P:System.DateTime.Today" /> to the
            collection.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.Contains(System.DateTime)">
            <summary>
            Returns a value that represents whether this collection contains the
            specified date.
            </summary>
            <param name="date">The date to search for.</param>
            <returns>
            True if the collection contains the specified date; otherwise,
            false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
            <summary>
            Returns a value that represents whether this collection contains the
            specified range of dates.
            </summary>
            <param name="start">The start of the date range.</param>
            <param name="end">The end of the date range.</param>
            <returns>
            True if all dates in the range are contained in the collection;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Returns a value that represents whether this collection contains any
            date in the specified range.
            </summary>
            <param name="range">The range of dates to search for.</param>
            <returns>
            True if any date in the range is contained in the collection;
            otherwise, false.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.InsertItem(System.Int32,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert.</param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.SetItem(System.Int32,System.Windows.Controls.CalendarDateRange)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.InRange(System.Windows.Controls.CalendarDateRange,System.DateTime)">
            <summary>
            Returns a value indicating whether a date is included in the range.
            </summary>
            <param name="range">The range to check.</param>
            <param name="day">The date to check.</param>
            <returns>
            A value indicating whether a date is included in the range.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.IsValid(System.Windows.Controls.CalendarDateRange)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="item">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarBlackoutDatesCollection.EnsureValidThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarButton">
            <summary>
            Represents a button on a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isCalendarButtonFocused">
            <summary>
            A value indicating whether the button is focused.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isInactive">
            <summary>
            A value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarButton._isSelected">
            <summary>
            A value indicating whether the button is selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the Loaded event.
            </summary>
            <param name="sender">The GlobalCalendarButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnCreateAutomationPeer">
            <summary>
            Returns a GlobalCalendarButtonAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            GlobalCalendarButtonAutomationPeer for the Button object.
            </returns>
            <remarks>
            <para>
            This method creates a new GlobalCalendarButtonAutomationPeer instance if
            one has not been created for the GlobalCalendarButton; otherwise, it
            returns the GlobalCalendarButtonAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the MouseLeftButtonDown event that
            occurs when the left mouse button is pressed while the mouse pointer
            is over this control.
            </summary>
            <param name="e">The event data. </param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonDown event as handled by
            setting the MouseButtonEventArgs.Handled property of the event data
            to true when the button is enabled and its ClickMode is not set to
            Hover.  Since this method marks the MouseLeftButtonDown event as
            handled in some situations, you should use the Click event instead
            to detect a button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event that occurs when
            the left mouse button is released while the mouse pointer is over
            this control. 
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonUp event as handled by setting
            the MouseButtonEventArgs.Handled property of the event data to true
            when the button is enabled and its ClickMode is not set to Hover.
            Since this method marks the MouseLeftButtonUp event as handled in
            some situations, you should use the Click event instead to detect a
            button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.SendMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            We need to simulate the MouseLeftButtonUp event for the
            GlobalCalendarButton that stays in Pressed state after MouseCapture is
            released since there is no actual MouseLeftButtonUp event for the
            release.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.Owner">
            <summary>
            Gets or sets the GlobalCalendar associated with this button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsCalendarButtonFocused">
            <summary>
            Gets or sets a value indicating whether the button is focused.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsInactive">
            <summary>
            Gets or sets a value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarButton.IsSelected">
            <summary>
            Gets or sets a value indicating whether the button is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarButton.CalendarButtonMouseDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the
            stylus touches the tablet PC) while the mouse pointer is over a
            UIElement.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarButton.CalendarButtonMouseUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the
            stylus is removed from the tablet PC) while the mouse (or the
            stylus) is over a UIElement (or while a UIElement holds mouse
            capture).
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer">
            <summary>
            Exposes
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" /> types
            to UI automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.GlobalCalendarButton)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarButton" />
            to associate with this
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendarButton that is associated
            with this GlobalCalendarButtonAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type
            that is associated with this GlobalCalendarButtonAutomationPeer.
            </summary>
            <returns>The string that contains the type of control.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the
            GlobalCalendarButton that is associated with this
            GlobalCalendarButtonAutomationPeer.  This method is called by GetHelpText.
            </summary>
            <returns>
            The help text, or String.Empty if there is no help text.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the GlobalCalendarButton that is associated with this
            GlobalCalendarButtonAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarButtonAutomationPeer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendarButton that is associated with
            this GlobalCalendarButtonAutomationPeer. This method is called by GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
            <remarks>
            The name property can be thought of as the string of text that a
            user would use to explain which control is being referred to.  It is
            important to have a textual representation for all controls in the
            graphical user interface (GUI) so that you can programmatically
            refer to the control in a localized manner.  The value is settable
            on control instances through the AutomationProperties.Name attached
            property.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Sends a request to activate the control and initiate its single,
            unambiguous action.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendarButton">
            <summary>
            Gets the GlobalCalendarButton to associate with this AutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.OwningCalendarAutomationPeer">
            <summary>
            Gets the automation peer for the GlobalCalendar associated with the
            button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Gets the ordinal number of the column that contains the cell or
            item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the column that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Gets the number of columns that are spanned by a cell or item.
            </summary>
            <value>
            The number of columns spanned.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Gets a UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.IGridProvider" />
            and that represents the container of the cell or item.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Gets the ordinal number of the row that contains the cell or item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the row that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Gets the number of rows that are spanned by a cell or item.
            </summary>
            <value>
            The number of rows that are spanned.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>
            True if the element is selected; otherwise, false.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and that acts as the container for the calling object.
            </summary>
            <value>
            The provider that supports
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.GlobalCalendarDateChangedEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" />
            event.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the GlobalCalendarDateChangedEventArgs
            class.
            </summary>
            <param name="removedDate">
            The date that was previously displayed.
            </param>
            <param name="addedDate">The date to be newly displayed.</param>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.RemovedDate">
            <summary>
            Gets the date that was previously displayed.
            </summary>
            <value>
            The date previously displayed.
            </value>
        </member>
        <member name="P:System.Windows.Controls.GlobalCalendarDateChangedEventArgs.AddedDate">
            <summary>
            Gets the date to be newly displayed.
            </summary>
            <value>The new date to display.</value>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton">
            <summary>
            Represents a day on a <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateToday">
            <summary>
            Identifies the Today state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateRegularDay">
            <summary>
            Identifies the RegularDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.GroupDay">
            <summary>
            Name of the Day state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateBlackoutDay">
            <summary>
            Identifies the BlackoutDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.StateNormalDay">
            <summary>
            Identifies the NormalDay state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.GroupBlackout">
            <summary>
            Name of the BlackoutDay state group.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton.DefaultContent">
            <summary>
            Default content for the GlobalCalendarDayButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._ignoringMouseOverState">
            <summary>
            A value indicating whether the button should ignore the MouseOver
            visual state.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isBlackout">
            <summary>
            A value indicating whether this is a blackout date.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isToday">
            <summary>
            A value indicating whether this button represents today.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isCurrent">
            <summary>
            A value indicating whether the button is the focused element on the
            GlobalCalendar control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isInactive">
            <summary>
            A value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarDayButton._isSelected">
            <summary>
            A value indicating whether the button is selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the Loaded event.
            </summary>
            <param name="sender">The GlobalCalendarButton.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnCreateAutomationPeer">
            <summary>
            Returns a CalendarDayButtonAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            CalendarDayButtonAutomationPeer for the Button object.
            </returns>
            <remarks>
            <para>
            This method creates a new CalendarDayButtonAutomationPeer instance
            if one has not been created for the GlobalCalendarButton; otherwise, it
            returns the CalendarDayButtonAutomationPeer previously created.
            </para>
            <para>
            Classes that participate in the Silverlight automation
            infrastructure must implement this method to return a class-specific
            derived class of AutomationPeer that reports information for
            automation behavior.
            </para>
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides class handling for the MouseLeftButtonDown event that
            occurs when the left mouse button is pressed while the mouse pointer
            is over this control.
            </summary>
            <param name="e">The event data. </param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonDown event as handled by
            setting the MouseButtonEventArgs.Handled property of the event data
            to true when the button is enabled and its ClickMode is not set to
            Hover.  Since this method marks the MouseLeftButtonDown event as
            handled in some situations, you should use the Click event instead
            to detect a button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event that occurs when
            the left mouse button is released while the mouse pointer is over
            this control. 
            </summary>
            <param name="e">The event data.</param>
            <exception cref="T:System.ArgumentNullException">
            e is a null reference (Nothing in Visual Basic).
            </exception>
            <remarks>
            This method marks the MouseLeftButtonUp event as handled by setting
            the MouseButtonEventArgs.Handled property of the event data to true
            when the button is enabled and its ClickMode is not set to Hover.
            Since this method marks the MouseLeftButtonUp event as handled in
            some situations, you should use the Click event instead to detect a
            button click.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.SendMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            We need to simulate the MouseLeftButtonUp event for the
            GlobalCalendarDayButton that stays in Pressed state after MouseCapture is
            released since there is no actual MouseLeftButtonUp event for the
            release.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IgnoreMouseOverState">
            <summary>
            Ensure the button is not in the MouseOver state.
            </summary>
            <remarks>
            If a button is in the MouseOver state when a Popup is closed (as is
            the case when you select a date in the DatePicker control), it will
            continue to think it's in the mouse over state even when the Popup
            opens again and it's not.  This method is used to forcibly clear the
            state by changing the CommonStates state group.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarDayButton.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.Owner">
            <summary>
            Gets or sets the GlobalCalendar associated with this button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.Index">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsBlackout">
            <summary>
            Gets or sets a value indicating whether this is a blackout date.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsToday">
            <summary>
            Gets or sets a value indicating whether this button represents
            today.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsCurrent">
            <summary>
            Gets or sets a value indicating whether the button is the focused
            element on the GlobalCalendar control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsInactive">
            <summary>
            Gets or sets a value indicating whether the button is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarDayButton.IsSelected">
            <summary>
            Gets or sets a value indicating whether the button is selected.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarDayButton.CalendarDayButtonMouseDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the
            stylus touches the tablet PC) while the mouse pointer is over a
            UIElement.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Primitives.GlobalCalendarDayButton.CalendarDayButtonMouseUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the
            stylus is removed from the tablet PC) while the mouse (or the
            stylus) is over a UIElement (or while a UIElement holds mouse
            capture).
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer">
            <summary>
            Exposes
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            types to UI Automation.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarDayButton" />
            instance that is associated with this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern implementation for this
            <see cref="T:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the GlobalCalendarDayButton that is
            associated with this GlobalCalendarDayButtonAutomationPeer.  This method
            is called by GetAutomationControlType.
            </summary>
            <returns>A value of the AutomationControlType enumeration.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type
            that is associated with this GlobalCalendarDayButtonAutomationPeer.
            </summary>
            <returns>The string that contains the type of control.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the
            GlobalCalendarDayButton that is associated with this
            GlobalCalendarDayButtonAutomationPeer.  This method is called by
            GetHelpText.
            </summary>
            <returns>
            The help text, or String.Empty if there is no help text.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the GlobalCalendarDayButton that is associated with
            this GlobalCalendarDayButtonAutomationPeer.  This method is called by
            GetClassName.
            </summary>
            <returns>
            The name of the owner type that is associated with this
            GlobalCalendarDayButtonAutomationPeer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the GlobalCalendarDayButton that is associated
            with this GlobalCalendarDayButtonAutomationPeer. This method is called by
            GetName.
            </summary>
            <returns>
            The text label of the element that is associated with this
            automation peer.
            </returns>
            <remarks>
            The name property can be thought of as the string of text that a
            user would use to explain which control is being referred to.  It is
            important to have a textual representation for all controls in the
            graphical user interface (GUI) so that you can programmatically
            refer to the control in a localized manner.  The value is settable
            on control instances through the AutomationProperties.Name attached
            property.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Sends a request to activate the control and to initiate its single,
            unambiguous action.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clear any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.EnsureSelection">
            <summary>
            Ensure selection of the GlobalCalendarDayButton is possible.
            </summary>
            <returns>
            A value indicating whether selection of the GlobalCalendarDayButton is
            possible.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
            <summary>
            Retrieves a collection of UI Automation providers that represent all
            the column headers that are associated with a table item or cell.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
            <summary>
            Retrieves a collection of UI Automation providers that represent all
            the row headers that are associated with a table item or cell.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendarDayButton">
            <summary>
            Gets the GlobalCalendarDayButton instance that is associated with this
            GlobalCalendarDayButtonAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendar">
            <summary>
            Gets the GlobalCalendar associated with the button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.OwningCalendarAutomationPeer">
            <summary>
            Gets the automation peer for the GlobalCalendar associated with the
            button.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
            <summary>
            Gets the ordinal number of the column that contains the cell or
            item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the column that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
            <summary>
            Gets the number of columns that are spanned by a cell or item.
            </summary>
            <value>
            The number of columns.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
            <summary>
            Gets a UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.IGridProvider" />
            and that represents the container of the cell or item.
            </summary>
            <value>
            The UI Automation provider.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
            <summary>
            Gets the ordinal number of the row that contains the cell or item.
            </summary>
            <value>
            A zero-based ordinal number that identifies the row that contains
            the cell or item.
            </value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
            <summary>
            Gets the number of rows that are spanned by a cell or item.
            </summary>
            <value>The number of rows.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>True if the element is selected; otherwise, false.</value>
        </member>
        <member name="P:System.Windows.Automation.Peers.GlobalCalendarDayButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and that acts as the container for the calling object.
            </summary>
            <value>The UI Automation provider.</value>
        </member>
        <member name="T:System.Windows.Controls.Primitives.GlobalCalendarItem">
            <summary>
            Represents the currently displayed month or year on a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementRoot">
            <summary>
            The name of the Root template part.
            </summary>
            <remarks>
            TODO: It appears this template part is no longer used.  Verify with
            compat whether we can remove the attribute.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementHeaderButton">
            <summary>
            The name of the HeaderButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementPreviousButton">
            <summary>
            The name of the PreviousButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementNextButton">
            <summary>
            The name of the NextButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementDayTitleTemplate">
            <summary>
            The name of the DayTitleTemplate template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementMonthView">
            <summary>
            The name of the MonthView template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementYearView">
            <summary>
            The name of the YearView template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem.ElementDisabledVisual">
            <summary>
            The name of the DisabledVisual template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._headerButton">
            <summary>
            The button that allows switching between month mode, year mode, and
            decade mode. 
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._nextButton">
            <summary>
            The button that displays the next page of the calendar when it is
            clicked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._previousButton">
            <summary>
            The button that displays the previous page of the calendar when it
            is clicked.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._dayTitleTemplate">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._monthView">
            <summary>
            Hosts the content when in month mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._yearView">
            <summary>
            Hosts the content when in year or decade mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._disabledVisual">
            <summary>
            The overlay for the disabled state.
            </summary>
            <remarks>
            The disabled visual isn't necessary given that we also have a
            Disabled visual state.  It's only being left in for compatability
            with existing templates.
            </remarks>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._lastCalendarButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._lastCalendarDayButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._downEventArg">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._downEventArgYearView">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isMouseLeftButtonDown">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isMouseLeftButtonDownYearView">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isTopLeftMostMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._isTopRightMostMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Primitives.GlobalCalendarItem._currentMonth">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Primitives.GlobalCalendarItem" />
            when a new template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PopulateGrids">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateDisabledGrid(System.Boolean)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="isEnabled">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateMonthMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDayTitles">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousMonthDays(System.DateTime)">
            <summary>
            How many days of the previous month need to be displayed.
            </summary>
            <param name="firstOfMonth">Inherited code: Requires comment.</param>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetButtonState(System.Windows.Controls.Primitives.GlobalCalendarDayButton,System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="childButton">Inherited code: Requires comment 1.</param>
            <param name="dateToAdd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetCalendarDayButtons(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthButtonsForYearMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModeHeaderButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModeNextButton(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetMonthModePreviousButton(System.DateTime)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="firstDayOfMonth">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateYearMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearButtons(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
            <param name="decadeEnd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModeHeaderButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModePreviousButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetYearModeNextButton">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateYearViewSelection(System.Windows.Controls.Primitives.GlobalCalendarButton)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="calendarButton">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.UpdateDecadeMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModeHeaderButton(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
            <param name="decadeEnd">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModeNextButton(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decadeEnd">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.SetDecadeModePreviousButton(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="decade">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.AddSelection(System.Windows.Controls.Primitives.GlobalCalendarDayButton)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="b">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Cell_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.HeaderButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.NextButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_CalendarButtonMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_CalendarButtonMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.Month_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.MonthView_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="M:System.Windows.Controls.Primitives.GlobalCalendarItem.YearView_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="sender">Inherited code: Requires comment 1.</param>
            <param name="e">Inherited code: Requires comment 2.</param>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.HeaderButton">
            <summary>
            Gets the button that allows switching between month mode, year mode,
            and decade mode. 
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.NextButton">
            <summary>
            Gets the button that displays the next page of the calendar when it
            is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.PreviousButton">
            <summary>
            Gets the button that displays the previous page of the calendar when
            it is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.MonthView">
            <summary>
            Gets the Grid that hosts the content when in month mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.YearView">
            <summary>
            Gets the Grid that hosts the content when in year or decade mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.Owner">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.Info">
            <summary>
            Gets the CalendarInfo that provides globalized date operations.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Primitives.GlobalCalendarItem.CurrentButton">
            <summary>
            Gets or sets Inherited code: Requires comment.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.GlobalSelectedDatesCollection">
            <summary>
            Represents a set of selected dates in a
            <see cref="T:System.Windows.Controls.GlobalCalendar" />.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._addedItems">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._dispatcherThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._isCleared">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._isRangeAdded">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.GlobalSelectedDatesCollection._owner">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.#ctor(System.Windows.Controls.GlobalCalendar)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.GlobalSelectedDatesCollection" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:System.Windows.Controls.GlobalCalendar" />
            associated with this object.
            </param>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
            <summary>
            Adds all the dates in the specified range, which includes the first
            and last dates, to the collection.
            </summary>
            <param name="start">The first date to add to the collection.</param>
            <param name="end">The last date to add to the collection.</param>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.InsertItem(System.Int32,System.DateTime)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert.</param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.SetItem(System.Int32,System.DateTime)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to replace.
            </param>
            <param name="item">
            The new value for the element at the specified index.
            </param>
            <remarks>
            This implementation raises the CollectionChanged event.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.ClearInternal">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.CheckSelectionMode">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="M:System.Windows.Controls.GlobalSelectedDatesCollection.IsValidThread">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <returns>Inherited code: Requires comment 1.</returns>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemConnectingLineInfo">
            <summary>
            Represents the necessary information to draw connecting lines in a
            TreeViewItem.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.#ctor(System.Windows.Controls.TreeViewItem)">
            <summary>
            Initializes a new instance of the TreeViewItemConnectingLineInfo
            class.
            </summary>
            <param name="item">The TreeViewItem.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.PositionConnectingLines">
            <summary>
            Position the connecting lines in the TreeViewItem.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemConnectingLineInfo.PositionVerticalConnectingLine">
            <summary>
            Position the vertical connecting line in the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.Item">
            <summary>
            Gets the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.VerticalConnectingLine">
            <summary>
            Gets or sets the vertical connecting line of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.HorizontalConnectingLine">
            <summary>
            Gets or sets the horizontal connecting line of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.ExpanderButton">
            <summary>
            Gets or sets the expander button of the TreeViewItem.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemConnectingLineInfo.Header">
            <summary>
            Gets or sets the header of the TreeViewItem.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TreeViewConnectingLines">
            <summary>
            Provides the necessary infrastructure to enable drawing connecting
            lines between the TreeViewItems in a TreeView.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetConnectingLineInfo(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the ConnectingLineInfo attached property for a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The ConnectingLineInfo property value for the TreeViewItem.
            </returns>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.ConnectingLineInfoProperty">
            <summary>
            Identifies the ConnectingLineInfo dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf(System.Windows.Shapes.Line)">
            <summary>
            Gets the value of the IsVerticalConnectingLineOf attached property
            for a specified Line.
            </summary>
            <param name="element">The Line from which the property value is read.</param>
            <returns>The IsVerticalConnectingLineOf property value for the Line.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsVerticalConnectingLineOf attached property to a specified Line.
            </summary>
            <param name="element">The Line to which the attached property is written.</param>
            <param name="value">The needed IsVerticalConnectingLineOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsVerticalConnectingLineOfProperty">
            <summary>
            Identifies the IsVerticalConnectingLineOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsVerticalConnectingLineOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsVerticalConnectingLineOfProperty property changed handler.
            </summary>
            <param name="d">
            Line that changed its IsVerticalConnectingLineOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line)">
            <summary>
            Gets the value of the IsHorizontalConnectingLineOf attached property
            for a specified Line.
            </summary>
            <param name="element">
            The Line from which the property value is read.
            </param>
            <returns>
            The IsHorizontalConnectingLineOf property value for the Line.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsHorizontalConnectingLineOf attached property
            to a specified Line.
            </summary>
            <param name="element">
            The Line to which the attached property is written.
            </param>
            <param name="value">
            The needed IsHorizontalConnectingLineOf value.
            </param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsHorizontalConnectingLineOfProperty">
            <summary>
            Identifies the IsHorizontalConnectingLineOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsHorizontalConnectingLineOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsHorizontalConnectingLineOfProperty property changed handler.
            </summary>
            <param name="d">
            Line that changed its IsHorizontalConnectingLineOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton)">
            <summary>
            Gets the value of the IsExpanderButtonOf attached property for a
            specified ToggleButton.
            </summary>
            <param name="element">
            The ToggleButton from which the property value is read.
            </param>
            <returns>
            The IsExpanderButtonOf property value for the ToggleButton.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsExpanderButtonOf attached property to a
            specified ToggleButton.
            </summary>
            <param name="element">
            The ToggleButton to which the attached property is written.
            </param>
            <param name="value">The needed IsExpanderButtonOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsExpanderButtonOfProperty">
            <summary>
            Identifies the IsExpanderButtonOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsExpanderButtonOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsExpanderButtonOfProperty property changed handler.
            </summary>
            <param name="d">
            ToggleButton that changed its IsExpanderButtonOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the IsHeaderOf attached property for a specified
            FrameworkElement.
            </summary>
            <param name="element">
            The FrameworkElement from which the property value is read.
            </param>
            <returns>
            The IsHeaderOf property value for the FrameworkElement.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf(System.Windows.FrameworkElement,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the value of the IsHeaderOf attached property to a specified
            FrameworkElement.
            </summary>
            <param name="element">
            The FrameworkElement to which the attached property is written.
            </param>
            <param name="value">The needed IsHeaderOf value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewConnectingLines.IsHeaderOfProperty">
            <summary>
            Identifies the IsHeaderOf dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewConnectingLines.OnIsHeaderOfPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsHeaderOfProperty property changed handler.
            </summary>
            <param name="d">
            FrameworkElement that changed its IsHeaderOf TreeViewItem.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemCheckBox">
            <summary>
            Represents a CheckBox whose value is associated with the
            TreeViewExtensions.IsChecked attached property of TreeViewItems.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.TreeViewItemCheckBox._parent">
            <summary>
            The parent TreeViewItem of the CheckBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.#ctor">
            <summary>
            Initializes a new instance of the TreeViewItemCheckBox class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.AssociateParentTreeViewItem">
            <summary>
            Associate the parent TreeViewItem with the CheckBox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemCheckBox.OnIsCheckedChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Update the TreeViewItem's IsChecked property when this IsChecked
            property is changed.
            </summary>
            <param name="sender">The CheckBox.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.TreeViewItemCheckBox.ParentTreeViewItem">
            <summary>
            Gets the parent TreeViewItem of the CheckBox.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.TreeViewExtensions">
            <summary>
            Provides useful extensions to TreeView and TreeViewItem instances.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentItemsControl(System.Windows.DependencyObject)">
            <summary>
            Get the parent ItemsControl of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The parent ItemsControl of an element, or null if not found.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetAncestorItemsControls(System.Windows.DependencyObject)">
            <summary>
            Get the ancestor ItemsControls of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The ancestor ItemsControls of an element.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentTreeViewItem(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the parent TreeViewItem of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The parent TreeViewItem if found, otherwise null.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentTreeView(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the parent TreeView of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>The parent TreeView if found, otherwise null.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The TreeViewItem containers of a TreeView.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the child TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The child TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the items and TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The items and TreeViewItem containers of a TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the items and TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The items and TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The TreeViewItem containers of a TreeView.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the descendant TreeViewItem containers of a TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The descendant TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the descendant items and TreeViewItem containers of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The descendant items and TreeViewItem containers of a TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the descendant items and TreeViewItem containers of a
            TreeViewItem.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The descendant items and TreeViewItem containers of a TreeViewItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDescendantItemsAndContainersIterator(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the items and TreeViewItem containers of a TreeView or
            TreeViewItem.
            </summary>
            <param name="control">The TreeView or TreeViewItem.</param>
            <returns>
            The items and TreeViewItem containers of a TreeView or TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSiblingItemsAndContainers(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the sibling items and containers of the item.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>The sibling items and containers of the item.</returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainersFromItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the TreeViewItems already created that are used to represent the
            given item.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item being represented.</param>
            <returns>
            A sequence of TreeViewItems that represent the given item, or an
            empty sequence if none were found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetContainerFromItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the TreeViewItem already created that is used to represent the
            given item.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item being represented.</param>
            <returns>
            The TreeViewItems that represents the given item, or null if no
            container was found.
            </returns>
            <remarks>
            If multiple TreeViewItems represent the same item, the first item
            found via a breadth-first search will be used.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetPath(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a path of items and TreeViewItem containers from the
            TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A path of items and TreeViewItem containers from the TreeViewItem to
            the root of the TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetPathIterator(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a path of items and TreeViewItem containers from the
            TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A path of items and TreeViewItem containers from the TreeViewItem to
            the root of the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetItem(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get the item wrapped by this container.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The item wrapped by the container, or null if not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetParentItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Get the item of the parent container for a specified
            <paramref name="item" />.
            </summary>
            <param name="view">
            The TreeView containing the <paramref name="item" />.
            </param>
            <param name="item">The child item.</param>
            <returns>
            The item of the parent container for the specified
            <paramref name="item" />, or null if not found.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsRoot(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a value indicating whether the TreeViewItem is a root of its
            TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A value indicating whether the TreeViewItem is a root of its
            TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsLeaf(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets a value indicating whether the TreeViewItem is a leaf in its
            TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            A value indicating whether the TreeViewItem is a leaf in its
            TreeView.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetDepth(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the depth of a TreeViewItem in its TreeView (using a zero-based
            index).
            </summary>
            <param name="item">The TreeViewItem.</param>
            <returns>
            The depth of a TreeViewItem in its TreeView (using a zero-based
            index).
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item" /> is not in a TreeView.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSelectedContainer(System.Windows.Controls.TreeView)">
            <summary>
            Get the selected TreeViewItem in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The selected TreeViewItem, or null if no selected item found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetSelectedContainer(System.Windows.Controls.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            Sets the selected TreeViewItem of a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The TreeViewItem to select.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ClearSelection(System.Windows.Controls.TreeView)">
            <summary>
            Clear the selection of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SelectItem(System.Windows.Controls.TreeView,System.Object)">
            <summary>
            Select an item in the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="item">The item to select.</param>
            <returns>
            A value indicating whether the item was successfully set as the
            TreeView's SelectedItem.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Gets the path to the TreeView's selected item.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>The path to the TreeView's selected item.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandOrCollapseAll(System.Windows.Controls.TreeViewItem,System.Boolean,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Recursively expand or collapse the TreeViewItem and all of its
            descendants.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <param name="expand">
            A value indicating whether to expand or collapse.
            </param>
            <param name="depth">
            The number of levels that have already been collapsed or expanded.
            This is used in conjunction with the optional maximumDepth to only
            expand a specified number of layers.
            </param>
            <param name="maximumDepth">
            An optional depth that defines the number of layers to expand or
            collapse.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandOrCollapseAll(System.Windows.Controls.TreeView,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Expand or collapse all of the descendants of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="expand">
            A value indicating whether to expand or collapse.
            </param>
            <param name="maximumDepth">
            An optional depth that defines the number of layers to expand or
            collapse.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandAll(System.Windows.Controls.TreeView)">
            <summary>
            Expand all of the items in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.CollapseAll(System.Windows.Controls.TreeView)">
            <summary>
            Collapse all of the items in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandToDepth(System.Windows.Controls.TreeView,System.Int32)">
            <summary>
            Expand a specified number of layers in a TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="depth">The number of layers to expand.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPathToRoot(System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            Expand a path from the given item to the root of it's TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <param name="collapseSiblings">
            A value indicating whether to collapse siblings while expanding the
            path.  This will result in only the path from the item to the root
            being expanded.
            </param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath(System.Windows.Controls.TreeViewItem)">
            <summary>
            Expand a path from the TreeViewItem to the root of the TreeView.
            </summary>
            <param name="item">The TreeViewItem.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Expand the path from the SelectedItem to the root of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.CollapseAllButSelectedPath(System.Windows.Controls.TreeView)">
            <summary>
            Collapse all TreeViewItems except those along the path from the
            TreeView's SelectedItem to the root of the TreeView.
            </summary>
            <param name="view">The TreeView.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath(System.Windows.Controls.TreeView,System.Object[])">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Func{System.Object,``0},``0[])">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="comparisonSelector">
            A function that takes a TreeViewItem's item and returns a value to
            compare against elements of the given <paramref name="items" />.
            The item itself will be used if 
            <paramref name="comparisonSelector" /> is null.
            </param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.ExpandPath``1(System.Windows.Controls.TreeView,System.Func{System.Object,``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Expand the given path of items starting from the TreeView's root.
            </summary>
            <typeparam name="T">
            The type of items provided in <paramref name="items" />.
            </typeparam>
            <param name="view">The TreeView.</param>
            <param name="comparisonSelector">
            A function that takes a TreeViewItem's item and returns a value to
            compare against elements of the given <paramref name="items" />.
            The item itself will be used if 
            <paramref name="comparisonSelector" /> is null.
            </param>
            <param name="items">
            The sequence of items corresponding to the path to expand.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="items" /> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetIsChecked(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the IsChecked attached property for a specified
            TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The IsChecked property value for the TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetIsChecked(System.Windows.Controls.TreeViewItem,System.Nullable{System.Boolean})">
            <summary>
            Sets the value of the IsChecked attached property to a specified
            TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem to which the attached property is written.
            </param>
            <param name="value">The needed IsChecked value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewExtensions.IsCheckedProperty">
            <summary>
            Identifies the IsChecked dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.OnIsCheckedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsCheckedProperty property changed handler.
            </summary>
            <param name="d">The TreeViewItem that changed IsChecked.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetAssociatedCheckBox(System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets the value of the AssociatedCheckBox attached property for a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem from which the property value is read.
            </param>
            <returns>
            The AssociatedCheckBox property value for the TreeViewItem.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.SetAssociatedCheckBox(System.Windows.Controls.TreeViewItem,System.Windows.Controls.TreeViewItemCheckBox)">
            <summary>
            Sets the value of the AssociatedCheckBox attached property to a
            specified TreeViewItem.
            </summary>
            <param name="element">
            The TreeViewItem to which the attached property is written.
            </param>
            <param name="value">The needed AssociatedCheckBox value.</param>
        </member>
        <member name="F:System.Windows.Controls.TreeViewExtensions.AssociatedCheckBoxProperty">
            <summary>
            Identifies the AssociatedCheckBox dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.OnAssociatedCheckBoxPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AssociatedCheckBoxProperty property changed handler.
            </summary>
            <param name="d">
            The TreeViewItem that changed its AssociatedCheckBox.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetCheckedItemsAndContainers(System.Windows.Controls.TreeView)">
            <summary>
            Get the sequence of items and containers with their IsChecked
            property set to True.
            </summary>
            <param name="view">The TreeView.</param>
            <returns>
            The sequence of items and containers with their IsChecked property
            set to True.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Controls.TreeViewExtensions.GetCheckedItemsAndContainers(System.Windows.Controls.TreeView,System.Boolean)">
            <summary>
            Get the sequence of items and containers with their IsChecked
            property set to True.
            </summary>
            <param name="view">The TreeView.</param>
            <param name="includeIndeterminate">
            A value indicating whether to include TreeViewItems with an
            indeterminate IsChecked value.
            </param>
            <returns>
            The sequence of items and containers with their IsChecked property
            set to True or also set to null if indeterminate values are
            included.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="view"/> is null.
            </exception>
        </member>
        <member name="P:System.Windows.Controls.TreeViewExtensions.CancelIsCheckedChangedBubbling">
            <summary>
            Gets or sets a value indicating whether recursive calls to
            OnIsCheckedPropertyChanged should ignore their notifications or
            process them accordingly.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.TreeViewExtensions.CancelIsCheckedChangedChildNotifications">
            <summary>
            Gets or sets a value indicating whether recursive calls to
            OnIsCheckedPropertyChanged should update their children when their
            IsChecked value has changed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ObjectCollection">
            <summary>
            Implements a collection of objects.
            </summary>
            <remarks>
            ObjectCollection is intended to simplify the task of populating an
            ItemsSource property in XAML.
            </remarks>
            <example>
            <code language="XAML">
            <![CDATA[
            <ItemsControl.ItemsSource>
                <controls:ObjectCollection>
                    <TextBlock Text="Object 1" />
                    <TextBlock Text="Object 2" />
                </controls:ObjectCollection>
            </ItemsControl.ItemsSource>
            ]]>
            </code>
            </example>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the ObjectCollection class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ObjectCollection.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the ObjectCollection class.
            </summary>
            <param name="collection">The collection whose elements are copied to the new ObjectCollection.</param>
        </member>
        <member name="T:System.Windows.Controls.TreeViewItemIndentationConverter">
            <summary>
            Used to convert TreeViewItems into a value based on their depth in
            the TreeView.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.#ctor">
            <summary>
            Initializes a new instance of the TreeViewItemIndentationConverter
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a TreeViewItem into a value based on the depth of the item
            in the TreeView.
            </summary>
            <param name="value">The TreeViewItem.</param>
            <param name="targetType">
            The indentation type to convert to (such as Thickness or double).
            </param>
            <param name="parameter">
            The number of pixels to indent each level of the TreeView.  A
            default value of 15.0 will be used if no parameter is provided.
            </param>
            <param name="culture">
            The culture used to convert the TreeViewItem.
            </param>
            <returns>
            A value based on the depth of the item in the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.WrapIndentation(System.Double,System.Type)">
            <summary>
            Wrap the indentation in the desired type.
            </summary>
            <param name="indentation">
            The number of pixels to indent the TreeViewItem.
            </param>
            <param name="targetType">
            The indentation type to convert to (such as Thickness or double).
            </param>
            <returns>
            A value based on the depth of the item in the TreeView.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.TreeViewItemIndentationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an indentation back into a TreeViewItem.  This always throws
            a NotSupportedException.
            </summary>
            <param name="value">The indentation.</param>
            <param name="targetType">The type of the indentation.</param>
            <param name="parameter">
            The number of pixels to indent each level of the TreeView.
            </param>
            <param name="culture">
            The culture used to convert the TreeViewItem.
            </param>
            <returns>Always throws a NotSupportedException.</returns>
        </member>
        <member name="T:System.Windows.Controls.StretchDirection">
            <summary>
            Describes the direction that content is scaled.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
            <summary>
            The content scales upward only when it is smaller than the parent.
            If the content is larger, no scaling downward is performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
            <summary>
            The content scales downward only when it is larger than the parent.
            If the content is smaller, no scaling upward is performed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.StretchDirection.Both">
            <summary>
            The content stretches to fit the parent according to the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> property.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Viewbox">
            <summary>
            Defines a content decorator that can stretch and scale a single child to
            fill the available space.
            </summary>
            <remarks>
            Viewbox should inherit from Decorator (which inherits from 
            FrameworkElement), but the closest working base in Silverlight is the 
            ContentControl class.  This provides a number of extra APIs not present 
            in WPF that should be avoided (including the Template property which 
            should not be changed from its default value).  Viewbox has been sealed 
            to prevent the creation of derived classes that depend on these features 
            not available on its WPF counterpart.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.ChildElementName">
            <summary>
            Name of  child element in Viewbox's default template.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.DefaultTemplateMarkup">
            <summary>
            XAML markup used to define the write-once Viewbox template.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> dependency
            property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnStretchPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its Stretch.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.IsValidStretchValue(System.Object)">
            <summary>
            Check whether the passed in object value is a valid Stretch enum value.
            </summary>
            <param name="o">The object typed value to be checked.</param>
            <returns>True if o is a valid Stretch enum value, false o/w.</returns>
        </member>
        <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnStretchDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchDirectionProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its StretchDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.IsValidStretchDirectionValue(System.Object)">
            <summary>
            Check whether the passed in object value is a valid StretchDirection enum value.
            </summary>
            <param name="o">The object typed value to be checked.</param>
            <returns>True if o is a valid StretchDirection enum value, false o/w.</returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Viewbox" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Viewbox" /> control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child element of a Viewbox to prepare for arranging
            it during the ArrangeOverride pass.
            </summary>
            <remarks>
            Viewbox measures it's child at an infinite constraint; it allows the child to be however large it so desires.
            The child's returned size will be used as it's natural size for scaling to Viewbox's size during Arrange.
            </remarks>
            <param name="availableSize">
            An upper limit Size that should not be exceeded.
            </param>
            <returns>The target Size of the element.</returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a Viewbox element.
            Viewbox always sets the child to its desired size.  It then computes and applies a transformation
            from that size to the space available: Viewbox's own input size less child margin.
            </summary>
            <param name="finalSize">
            The Size this element uses to arrange its child content.
            </param>
            <returns>
            The Size that represents the arranged size of this Viewbox element
            and its child.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.Viewbox.ComputeScaleFactor(System.Windows.Size,System.Windows.Size)">
            <summary>
            Compute the scale factor of the Child content.
            </summary>
            <param name="availableSize">
            Available size to fill with content.
            </param>
            <param name="contentSize">Desired size of the content.</param>
            <returns>Width and Height scale factors.</returns>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.DefaultTemplate">
            <summary>
            Gets or sets the default ControlTemplate of the Viewbox.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.ChildElement">
            <summary>
            Gets or sets the element of the Viewbox that will render the child.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Scale">
            <summary>
            Gets or sets the transformation on the ChildElement used to scale the
            Child content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Child">
            <summary>
            Gets or sets the single child element of a
            <see cref="T:System.Windows.Controls.Viewbox" /> element.
            </summary>
            <value>
            The single child element of a
            <see cref="T:System.Windows.Controls.Viewbox" /> element.
            </value>
            <remarks>
            Child must be an alias of ContentControl.Content property to ensure 
            continuous namescope, ie, named element within Viewbox can be found.
            </remarks>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.Stretch">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Stretch" /> mode,
            which determines how content fits into the available space.
            </summary>
            <value>
            A <see cref="T:System.Windows.Media.Stretch" /> mode, which
            determines how content fits in the available space.  The default is
            <see cref="F:System.Windows.Media.Stretch.Uniform" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
            <summary>
            Gets or sets the
            <see cref="T:System.Windows.Controls.StretchDirection" />, which
            determines how scaling is applied to the contents of a
            <see cref="T:System.Windows.Controls.Viewbox" />.
            </summary>
            <value>
            A <see cref="T:System.Windows.Controls.StretchDirection" />, which
            determines how scaling is applied to the contents of a
            <see cref="T:System.Windows.Controls.Viewbox" />. The default is
            <see cref="F:System.Windows.Controls.StretchDirection.Both" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.OrientedSize">
            <summary>
            The OrientedSize structure is used to abstract the growth direction from
            the layout algorithms of WrapPanel.  When the growth direction is
            oriented horizontally (ex: the next element is arranged on the side of
            the previous element), then the Width grows directly with the placement
            of elements and Height grows indirectly with the size of the largest
            element in the row.  When the orientation is reversed, so is the
            directional growth with respect to Width and Height.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._orientation">
            <summary>
            The orientation of the structure.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._direct">
            <summary>
            The size dimension that grows directly with layout placement.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.OrientedSize._indirect">
            <summary>
            The size dimension that grows indirectly with the maximum value of
            the layout row or column.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
        </member>
        <member name="M:System.Windows.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation,System.Double,System.Double)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
            <param name="width">Un-oriented width of the structure.</param>
            <param name="height">Un-oriented height of the structure.</param>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Orientation">
            <summary>
            Gets the orientation of the structure.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Direct">
            <summary>
            Gets or sets the size dimension that grows directly with layout
            placement.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Indirect">
            <summary>
            Gets or sets the size dimension that grows indirectly with the
            maximum value of the layout row or column.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Width">
            <summary>
            Gets or sets the width of the size.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.OrientedSize.Height">
            <summary>
            Gets or sets the height of the size.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.WrapPanel">
            <summary>
            Positions child elements sequentially from left to right or top to
            bottom.  When elements extend beyond the panel edge, elements are
            positioned in the next row or column.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />
            dependency property
            </value>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </value>
        </member>
        <member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />
            dependency property.
            </value>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">WrapPanel that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.WrapPanel" /> class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.OnItemHeightOrWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler for ItemHeight and ItemWidth.
            </summary>
            <param name="d">
            WrapPanel that changed its ItemHeight or ItemWidth.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:System.Windows.Controls.WrapPanel" /> in anticipation
            of arranging them during the
            <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" />
            pass.
            </summary>
            <param name="constraint">
            The size available to child elements of the wrap panel.
            </param>
            <returns>
            The size required by the
            <see cref="T:System.Windows.Controls.WrapPanel" /> and its 
            elements.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges and sizes the
            <see cref="T:System.Windows.Controls.WrapPanel" /> control and its
            child elements.
            </summary>
            <param name="finalSize">
            The area within the parent that the
            <see cref="T:System.Windows.Controls.WrapPanel" /> should use 
            arrange itself and its children.
            </param>
            <returns>
            The actual size used by the
            <see cref="T:System.Windows.Controls.WrapPanel" />.
            </returns>
        </member>
        <member name="M:System.Windows.Controls.WrapPanel.ArrangeLine(System.Int32,System.Int32,System.Nullable{System.Double},System.Double,System.Double)">
            <summary>
            Arrange a sequence of elements in a single line.
            </summary>
            <param name="lineStart">
            Index of the first element in the sequence to arrange.
            </param>
            <param name="lineEnd">
            Index of the last element in the sequence to arrange.
            </param>
            <param name="directDelta">
            Optional fixed growth in the primary direction.
            </param>
            <param name="indirectOffset">
            Offset of the line in the indirect direction.
            </param>
            <param name="indirectGrowth">
            Shared indirect growth of the elements on this line.
            </param>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
            <summary>
            Gets or sets the height of the layout area for each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            </summary>
            <value>
            The height applied to the layout area of each item that is contained
            within a <see cref="T:System.Windows.Controls.WrapPanel" />.  The
            default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
            <summary>
            Gets or sets the width of the layout area for each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            </summary>
            <value>
            The width that applies to the layout area of each item that is
            contained in a <see cref="T:System.Windows.Controls.WrapPanel" />.
            The default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:System.Windows.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets the direction in which child elements are arranged.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Controls.Orientation" />
            values.  The default is
            <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.
            </value>
        </member>
        <member name="T:System.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform operation..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_CheckSelectionMode_InvalidOperation">
            <summary>
              Looks up a localized string similar to The SelectedDates collection can be changed only in a multiple selection mode. Use the SelectedDate in a single selection mode..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_NextButtonName">
            <summary>
              Looks up a localized string similar to next button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnDisplayModePropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to DisplayMode value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnFirstDayOfWeekChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to FirstDayOfWeek value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectedDateChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to The SelectedDate property cannot be set when the selection mode is None..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectedDateChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to SelectedDate value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_OnSelectionModeChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to SelectionMode value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_PreviousButtonName">
            <summary>
              Looks up a localized string similar to previous button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Calendar_UnSelectableDates">
            <summary>
              Looks up a localized string similar to Value is not valid..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_BlackoutDayHelpText">
            <summary>
              Looks up a localized string similar to Blackout Day - {0}.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_CalendarButtonLocalizedControlType">
            <summary>
              Looks up a localized string similar to calendar button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_DayButtonLocalizedControlType">
            <summary>
              Looks up a localized string similar to day button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_DecadeMode">
            <summary>
              Looks up a localized string similar to Decade.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_MonthMode">
            <summary>
              Looks up a localized string similar to Month.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarAutomationPeer_YearMode">
            <summary>
              Looks up a localized string similar to Year.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarCollection_MultiThreadedCollectionChangeNotSupported">
            <summary>
              Looks up a localized string similar to This type of Collection does not support changes to its SourceCollection from a thread different from the Dispatcher thread..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.CalendarInfo_DateFormatInfoRequired">
            <summary>
              Looks up a localized string similar to DateFormatInfo cannot be null..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DateTimeTypeConverter_FormatException">
            <summary>
              Looks up a localized string similar to DateTime value is in the wrong format..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.DockPanel_OnDockPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Dock value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Expander_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid ExpandDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ParameterCollection_EnsureCanChangeCollection_IsReadOnly">
            <summary>
              Looks up a localized string similar to ConstructorParameters cannot be changed because ObjectDataProvider is using a user-assigned ObjectInstance..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.ResolveElementNameEventArgs_ctor_ElementNameEmpty">
            <summary>
              Looks up a localized string similar to The elementName should not be empty..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TreeViewExtensions_GetDepth_NotInTreeView">
            <summary>
              Looks up a localized string similar to The item is not in a TreeView..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_Convert_CannotConvert">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is unable to convert &apos;{1}&apos; to &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.TypeConverters_ConvertFrom_CannotConvertFromType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot convert from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnApplyTemplate_OnlyOnce">
            <summary>
              Looks up a localized string similar to The template can only be applied one time..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnStretchDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid StretchDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.Viewbox_OnStretchPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Stretch value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.WrapPanel_OnItemHeightOrWidthPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid length value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Properties.Resources.WrapPanel_OnOrientationPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Orientation value &apos;{0}&apos;..
            </summary>
        </member>
    </members>
</doc>
